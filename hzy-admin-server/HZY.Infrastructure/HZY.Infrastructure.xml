<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HZY.Infrastructure</name>
    </assembly>
    <members>
        <member name="T:HZY.Infrastructure.Aop.CacheAttribute">
            <summary>
            缓存拦截器
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.Aop.CacheAttribute.CacheKey">
            <summary>
            缓存 key
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.Aop.CacheAttribute.RedisServiceType">
            <summary>
            Redis 服务类型
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.Aop.CacheAttribute.CacheDuration">
            <summary>
            缓存时长 (秒) 默认存储 10s 如果0代表永久
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.Aop.CacheAttribute.#ctor">
            <summary>
            缓存数据
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.Aop.CacheAttribute.#ctor(System.Type)">
            <summary>
            缓存数据 需要传递 Redis 服务类型
            </summary>
            <param name="redisServiceType">Redis 服务类型</param>
        </member>
        <member name="M:HZY.Infrastructure.Aop.CacheAttribute.Before(HzyScanDiService.AopContext)">
            <summary>
            之前 开始获取缓存
            </summary>
            <param name="aopContext"></param>
        </member>
        <member name="M:HZY.Infrastructure.Aop.CacheAttribute.After(HzyScanDiService.AopContext)">
            <summary>
            之后 开始存储缓存
            </summary>
            <param name="aopContext"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:HZY.Infrastructure.Aop.CacheAttribute.Before``1(HzyScanDiService.AopContext)">
            <summary>
            之前 开始获取缓存
            </summary>
            <param name="aopContext"></param>
        </member>
        <member name="M:HZY.Infrastructure.Aop.CacheAttribute.After``1(HzyScanDiService.AopContext,``0)">
            <summary>
            之后 开始存储缓存
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="aopContext"></param>
            <param name="result">对 task 使用了 awite 后的结果</param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:HZY.Infrastructure.Aop.CacheAttribute.GetCacheKey(HzyScanDiService.AopContext)">
            <summary>
            获取缓存 key
            </summary>
            <param name="aopContext"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Aop.CacheAttribute.CreateMemoryCache(HzyScanDiService.AopContext,System.Object)">
            <summary>
            创建 MemoryCache 缓存
            </summary>
            <param name="aopContext"></param>
            <param name="result"></param>
        </member>
        <member name="M:HZY.Infrastructure.Aop.CacheAttribute.GetMemoryCache(HzyScanDiService.AopContext)">
            <summary>
            获取 MemoryCache 缓存
            </summary>
            <param name="aopContext"></param>
        </member>
        <member name="M:HZY.Infrastructure.Aop.CacheAttribute.CreateRedisCache(HzyScanDiService.AopContext,System.Object)">
            <summary>
            创建 Redis 缓存
            </summary>
            <param name="aopContext"></param>
            <param name="result"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:HZY.Infrastructure.Aop.CacheAttribute.GetRedisCache(HzyScanDiService.AopContext)">
            <summary>
            获取 Redis 缓存
            </summary>
            <param name="aopContext"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:HZY.Infrastructure.Aop.CacheAttribute.GetRedisCache``1(HzyScanDiService.AopContext)">
            <summary>
            获取 Redis 缓存
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="aopContext"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:HZY.Infrastructure.Aop.CacheAttribute.GetDatabase(HzyScanDiService.AopContext)">
            <summary>
            获取 Redis Database 对象
            </summary>
            <param name="aopContext"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:HZY.Infrastructure.ApiResultManage.ApiResult">
            <summary>
            Api 消息返回类
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.ApiResultManage.ApiResult.ResultMessage(HZY.Infrastructure.ApiResultManage.ApiResultCodeEnum,System.String)">
            <summary>
            返回消息
            </summary>
            <param name="apiResultCodeEnum"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ApiResultManage.ApiResult.ResultData(HZY.Infrastructure.ApiResultManage.ApiResultCodeEnum,System.Object)">
            <summary>
            返回数据
            </summary>
            <param name="apiResultCodeEnum"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ApiResultManage.ApiResult.Result(HZY.Infrastructure.ApiResultManage.ApiResultCodeEnum,System.String,System.Object)">
            <summary>
            可返回消息和数据
            </summary>
            <param name="apiResultCodeEnum"></param>
            <param name="message"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ApiResultManage.ApiResult.ResultMessage(System.Int32,System.String)">
            <summary>
            返回消息
            </summary>
            <param name="code"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ApiResultManage.ApiResult.ResultData(System.Int32,System.Object)">
            <summary>
            返回数据
            </summary>
            <param name="code"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ApiResultManage.ApiResult.Result(System.Int32,System.String,System.Object)">
            <summary>
            可返回消息和数据
            </summary>
            <param name="code"></param>
            <param name="message"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ApiResultManage.ApiResult.OkMessage(System.String)">
            <summary>
            成功 可返回消息
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ApiResultManage.ApiResult.OkData(System.Object)">
            <summary>
            成功 可返回数据
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ApiResultManage.ApiResult.Ok(System.String,System.Object)">
            <summary>
            成功 可返回 消息和数据
            </summary>
            <param name="message"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ApiResultManage.ApiResult.WarnMessage(System.String)">
            <summary>
            警告 可返回消息
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ApiResultManage.ApiResult.WarnData(System.Object)">
            <summary>
            警告 可返回数据
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ApiResultManage.ApiResult.Warn(System.String,System.Object)">
            <summary>
            警告 可返回 消息和数据
            </summary>
            <param name="message"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:HZY.Infrastructure.ApiResultManage.ApiResultCodeEnum">
            <summary>
            消息返回码
            </summary>
        </member>
        <member name="F:HZY.Infrastructure.ApiResultManage.ApiResultCodeEnum.RequestLimit">
            <summary>
            请求限制
            </summary>
        </member>
        <member name="F:HZY.Infrastructure.ApiResultManage.ApiResultCodeEnum.NotFount">
            <summary>
            接口不存在
            </summary>
        </member>
        <member name="F:HZY.Infrastructure.ApiResultManage.ApiResultCodeEnum.Error">
            <summary>
            程序错误
            </summary>
        </member>
        <member name="F:HZY.Infrastructure.ApiResultManage.ApiResultCodeEnum.UnAuth">
            <summary>
            未授权
            </summary>
        </member>
        <member name="F:HZY.Infrastructure.ApiResultManage.ApiResultCodeEnum.Warn">
            <summary>
            警告
            </summary>
        </member>
        <member name="F:HZY.Infrastructure.ApiResultManage.ApiResultCodeEnum.Ok">
            <summary>
            成功
            </summary>
        </member>
        <member name="T:HZY.Infrastructure.ApiResultManage.MessageBox">
            <summary>
            警告消息
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.ApiResultManage.MessageBox.GetApiResult">
            <summary>
            获取 ApiResult
            </summary>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ApiResultManage.MessageBox.Show(System.String)">
            <summary>
            输出消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:HZY.Infrastructure.ApiResultManage.MessageBox.Show(System.String,System.Object)">
            <summary>
            输出消息和数据
            </summary>
            <param name="message"></param>
            <param name="data"></param>
        </member>
        <member name="M:HZY.Infrastructure.ApiResultManage.MessageBox.Show(HZY.Infrastructure.ApiResultManage.ApiResult)">
            <summary>
            支持传入 ApiResult 对象
            </summary>
            <param name="apiResult"></param>
        </member>
        <member name="T:HZY.Infrastructure.AppConfiguration">
            <summary>
            程序配置信息映射类 appsettings.json
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.AppConfiguration._configuration">
            <summary>
            IConfiguration 通过属性注入
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.AppConfiguration.Configs">
            <summary>
            程序默认配置项 通过属性注入
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.AppConfiguration.ConnectionStrings">
            <summary>
            连接字符串 通过属性注入
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.AppConfiguration.#ctor">
            <summary>
            程序配置信息映射类
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.AppConfiguration.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            程序配置信息映射类
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="T:HZY.Infrastructure.ConnectionStringsOptions">
            <summary>
            连接字符串配置
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.ConnectionStringsOptions.DefaultDatabaseType">
            <summary>
            默认数据库类型
            </summary>
            <value></value>
        </member>
        <member name="P:HZY.Infrastructure.ConnectionStringsOptions.DefaultSqlServer">
            <summary>
            sqlserver
            </summary>
            <value></value>
        </member>
        <member name="P:HZY.Infrastructure.ConnectionStringsOptions.DefaultMySql">
            <summary>
            mysql
            </summary>
            <value></value>
        </member>
        <member name="P:HZY.Infrastructure.ConnectionStringsOptions.DefaultPostgreSql">
            <summary>
            PostgreSql
            </summary>
            <value></value>
        </member>
        <member name="P:HZY.Infrastructure.ConnectionStringsOptions.Redis">
            <summary>
            redis 地址
            </summary>
            <value></value>
        </member>
        <member name="T:HZY.Infrastructure.AppConfigurationOptions">
            <summary>
            应用程序配置
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.AppConfigurationOptions.AppTitle">
            <summary>
            程序标题
            </summary>
            <value></value>
        </member>
        <member name="P:HZY.Infrastructure.AppConfigurationOptions.AuthorizationKeyName">
            <summary>
            token 键名
            </summary>
            <value></value>
        </member>
        <member name="P:HZY.Infrastructure.AppConfigurationOptions.AdminRoleId">
            <summary>
            超级管理员角色id
            </summary>
            <value></value>
        </member>
        <member name="P:HZY.Infrastructure.AppConfigurationOptions.SysMenuId">
            <summary>
            系统菜单id
            </summary>
            <value></value>
        </member>
        <member name="P:HZY.Infrastructure.AppConfigurationOptions.Namespace">
            <summary>
            命名空间
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.AppConfigurationOptions.ApiWhiteList">
            <summary>
            Api 白名单
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.AppConfigurationOptions.IsMonitorEFCore">
            <summary>
            是否监控EFCore程序
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.AppConfigurationOptions.IsInterceptEdit">
            <summary>
            是否拦截编辑 添加、修改、删除
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.AppConfigurationOptions.IsRunQuartzTask">
            <summary>
            是否运行 Quartz Task
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.Controllers.AdminBaseController`1.#ctor(`0)">
            <summary>
            管理系统基础控制器构造函数
            </summary>
            <param name="defaultService">默认服务</param>
        </member>
        <member name="M:HZY.Infrastructure.Controllers.AdminBaseController.#ctor">
            <summary>
            管理系统基础控制器构造函数
            </summary>
        </member>
        <member name="F:HZY.Infrastructure.Controllers.ApiBaseController`1._defaultService">
            <summary>
            默认服务
            </summary>
        </member>
        <member name="T:HZY.Infrastructure.Controllers.ApiBaseController">
            <summary>
            控制器服务
            </summary>
        </member>
        <member name="T:HZY.Infrastructure.ConvertExtensions">
            <summary>
            数据转换扩展
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.ConvertExtensions.ToStr``1(``0)">
            <summary>
            string
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ConvertExtensions.ToInt32``1(``0)">
            <summary>
            int
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ConvertExtensions.ToFloat``1(``0)">
            <summary>
            float
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ConvertExtensions.ToDouble``1(``0)">
            <summary>
            double
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ConvertExtensions.ToDecimal``1(``0)">
            <summary>
            decimal
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ConvertExtensions.ToGuid``1(``0)">
            <summary>
            Guid
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ConvertExtensions.ToGuidNull``1(``0)">
            <summary>
            Guid?
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ConvertExtensions.ToGuidStr``1(``0)">
            <summary>
            GuidString
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ConvertExtensions.ToDateTime``1(``0)">
            <summary>
            DateTime
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ConvertExtensions.ToDateTimeNull``1(``0)">
            <summary>
            DateTime?
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ConvertExtensions.ToDateTimeFormat``1(``0,System.String)">
            <summary>
            格式的 时间 字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="formatStr"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ConvertExtensions.ToBool``1(``0)">
            <summary>
            bool
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ConvertExtensions.ToBytes``1(``0)">
            <summary>
            byte[]
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ConvertExtensions.ToTime``1(System.Int32)">
            <summary>
            时间戳转为C#格式时间
            </summary>
            <param name="timeStamp"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ConvertExtensions.ToTimeInt``1(System.DateTime)">
            <summary>
            DateTime时间格式转换为Unix时间戳格式
            </summary>
            <param name="time"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ConvertExtensions.CreateInstance``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ConvertExtensions.NullSafe``1(``0,``0)">
            <summary>
            将 Null 对象转换为 对象的实例
            </summary>
            <typeparam name="T"></typeparam>
            <param name="model"></param>
            <param name="defaultInstance">自定义 默认实例</param>
            <returns></returns>
        </member>
        <member name="T:HZY.Infrastructure.DefaultDatabaseType">
            <summary>
            默认数据库类型
            </summary>
        </member>
        <member name="T:HZY.Infrastructure.Filters.ApiCheckModelAttribute">
            <summary>
            对接口模型验证
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.Filters.ApiCheckModelAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            每次请求Action之前发生，，在行为方法执行前执行
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:HZY.Infrastructure.Filters.ApiExceptionFilter">
            <summary>
            异常过滤器
            </summary>
        </member>
        <member name="T:HZY.Infrastructure.Filters.ApiResourceCacheFilterAttribute">
            <summary>
            接口资源加载过滤 拦截资源做缓存
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.Filters.ApiResourceCacheFilterAttribute.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)">
            <summary>
            资源加载之前
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:HZY.Infrastructure.Filters.ApiResourceCacheFilterAttribute.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)">
            <summary>
            资源加载之后
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:HZY.Infrastructure.Filters.ApiResourceCacheFilterAttribute.GetCacheKey(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取每个唯一请求的缓存 key
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:HZY.Infrastructure.Filters.ApiResultFilterAttribute">
            <summary>
            Api 结果返回包装器
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.Filters.ApiResultFilterAttribute.OnResultExecuting(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext)">
            <summary>
            结果 返回前
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:HZY.Infrastructure.Filters.ApiResultFilterAttribute.OnResultExecuted(Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext)">
            <summary>
            返回结果后
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:HZY.Infrastructure.Filters.Models.RequestLimitContext">
            <summary>
            请求限制上下文
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.Filters.Models.RequestLimitContext.LimitCount">
            <summary>
            限制次数
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.Filters.Models.RequestLimitContext.ActiveTime">
            <summary>
            最后活跃时间
            </summary>
        </member>
        <member name="T:HZY.Infrastructure.Filters.RequestLimitFilterAttribute">
            <summary>
            请求限制
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.Filters.RequestLimitFilterAttribute.Duration">
            <summary>
            请求范围内 单位：秒
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.Filters.RequestLimitFilterAttribute.LimitCount">
            <summary>
            请求次数
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.Filters.RequestLimitFilterAttribute.Message">
            <summary>
            消息提醒内容
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.Filters.RequestLimitFilterAttribute.#ctor">
            <summary>
            请求限制
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.Filters.RequestLimitFilterAttribute.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)">
            <summary>
            资源加载之前
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:HZY.Infrastructure.Filters.RequestLimitFilterAttribute.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)">
            <summary>
            资源加载之后
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:HZY.Infrastructure.Filters.RequestLimitFilterAttribute.GetCacheKey(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取每个唯一请求的缓存 key
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:HZY.Infrastructure.MessageQueue.IMessageQueueProvider">
            <summary>
            消息队列提供者
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.MessageQueue.IMessageQueueProvider.RunAsync">
            <summary>
            启动运行
            </summary>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.MessageQueue.IMessageQueueProvider.SendMessageQueueAsync(System.String,System.Object,System.Action{System.Object,System.IServiceProvider})">
            <summary>
            发布消息队列
            </summary>
            <returns></returns>
        </member>
        <member name="T:HZY.Infrastructure.MessageQueue.MessageQueueProvider">
            <summary>
            消息队列提供者
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.MessageQueue.Models.MessageQueueContext.Key">
            <summary>
            队列主键
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.MessageQueue.Models.MessageQueueContext.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.MessageQueue.Models.MessageQueueContext.Call">
            <summary>
            队列回调函数
            </summary>
        </member>
        <member name="T:HZY.Infrastructure.ObjectMapper">
            <summary>
            对象映射类
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.ObjectMapper.MapTo``2(``0)">
            <summary>
            copy object
            </summary>
            <typeparam name="TOld">旧对象类型</typeparam>
            <typeparam name="TNew">新复制对象类型</typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.ObjectMapper.MapToList``2(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            copy list
            </summary>
            <typeparam name="TOld">旧对象类型</typeparam>
            <typeparam name="TNew">新复制对象类型</typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:HZY.Infrastructure.Permission.Attributes.ActionDescriptorAttribute">
            <summary>
            action 功能模块描述
            </summary>
        </member>
        <member name="F:HZY.Infrastructure.Permission.Attributes.ActionDescriptorAttribute._functionName">
            <summary>
            功能名称
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.Permission.Attributes.ActionDescriptorAttribute.DisplayName">
            <summary>
            接口显示名称
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.Permission.Attributes.ActionDescriptorAttribute.GetFunctionName">
            <summary>
            获取功能名称
            </summary>
            <returns></returns>
        </member>
        <member name="T:HZY.Infrastructure.Permission.Attributes.ControllerDescriptorAttribute">
            <summary>
            控制器 接口 描述
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.Permission.Attributes.ControllerDescriptorAttribute.MenuId">
            <summary>
            用于接口权限鉴定 菜单id
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.Permission.Attributes.ControllerDescriptorAttribute.DisplayName">
            <summary>
            控制器显示名称
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.Permission.Attributes.ControllerDescriptorAttribute.#ctor">
            <summary>
            控制器描述
            </summary>
        </member>
        <member name="T:HZY.Infrastructure.Permission.PermissionUtil">
            <summary>
            权限工具
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.Permission.PermissionUtil.GetControllerDescriptorAttribute(System.Type)">
            <summary>
            获取控制器 的 ControllerDescriptorAttribute 特性
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Permission.PermissionUtil.GetControllerDescriptorAttribute(Microsoft.AspNetCore.Mvc.ControllerBase)">
            <summary>
            获取控制器 的 ControllerDescriptorAttribute 特性
            </summary>
            <param name="controllerBase"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Permission.PermissionUtil.GetActionDescriptorAttribute(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor)">
            <summary>
            获取 Action 描述标记特性
            </summary>
            <param name="actionDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Permission.PermissionUtil.GetControllerDisplayName(System.Type)">
            <summary>
            获取当前控制器的显示名称
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Permission.PermissionUtil.GetControllerDisplayName(Microsoft.AspNetCore.Mvc.ControllerBase)">
            <summary>
            获取当前控制器的显示名称
            </summary>
            <param name="controllerBase"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.RazorView.IRazorViewRender.RenderAsync(System.String,System.Object)">
            <summary>
            渲染 razor cshtml
            </summary>
            <param name="viewName">例如： /wwwroot/Root/Service.cshtml</param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.RazorView.IRazorViewRender.RenderByDictionaryAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            渲染 razor cshtml
            </summary>
            <param name="viewName">例如： /wwwroot/Root/Service.cshtml</param>
            <param name="viewData"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.RazorView.IRazorViewRender.RenderAsync(System.String,System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            渲染 razor cshtml
            </summary>
            <param name="viewName">例如： /wwwroot/Root/Service.cshtml</param>
            <param name="model"></param>
            <param name="viewData"></param>
            <returns></returns>
        </member>
        <member name="T:HZY.Infrastructure.RazorView.RazorViewRender">
            <summary>
            razor cshtml 模板渲染
            </summary>
        </member>
        <member name="T:HZY.Infrastructure.ReadXmlSummary">
            <summary>
            读取 xml 摘要
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.Redis.Impl.RedisServiceImpl.Database">
            <summary>
            get database
            </summary>
        </member>
        <member name="T:HZY.Infrastructure.Redis.IRedisService">
            <summary>
            
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.Redis.RedisUtil.AddRedisService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
            <summary>
            注册 Redis 模块
            </summary>
            <param name="services"></param>
            <param name="connectionString"></param>
        </member>
        <member name="T:HZY.Infrastructure.SerilogUtil.LogUtil">
            <summary>
            日志工具
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.SerilogUtil.LogUtil.Build(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            启动
            </summary>
        </member>
        <member name="P:HZY.Infrastructure.SerilogUtil.LogUtil.Log">
            <summary>
            日志对象
            </summary>
        </member>
        <member name="T:HZY.Infrastructure.SerilogUtil.DateTimeNowEnricher">
            <summary>
            时间处理
            </summary>
        </member>
        <member name="T:HZY.Infrastructure.Services.FrameworkBaseService`1">
            <summary>
            服务层 基类
            </summary>
            <typeparam name="TRepository">默认仓储 类型</typeparam>
        </member>
        <member name="F:HZY.Infrastructure.Services.FrameworkBaseService`1._defaultRepository">
            <summary>
            默认 仓储
            </summary>
        </member>
        <member name="T:HZY.Infrastructure.TextJson.DateTimeJsonConverter">
            <summary>
            Json时间转化器
            </summary>
        </member>
        <member name="T:HZY.Infrastructure.TextJson.DateTimeNullJsonConverter">
            <summary>
            Json时间转化器
            </summary>
        </member>
        <member name="T:HZY.Infrastructure.Token.JwtTokenUtil">
            <summary>
            JWT是由 . 分割的三部分组成：
            头部(Header)
            载荷(Payload) : 这一部分是JWT主要的信息存储部分，其中包含了许多种的声明（claims）。
            签名(Signature)：使用保存在服务端的秘钥对其签名，用来验证发送者的JWT的同时也能确保在期间不被篡改。
            </summary>
        </member>
        <member name="T:HZY.Infrastructure.Token.TokenService">
            <summary>
            token 服务
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.Token.TokenService.CreateTokenByAccountId(System.Guid)">
            <summary>
            根据 id 创建token
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Token.TokenService.HasTokenString">
            <summary>
            检查是否有Token字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Token.TokenService.GetTokenString">
            <summary>
            获取 token 字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Token.TokenService.GetAccountIdByToken">
            <summary>
            获取 token 并得到 id
            </summary>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Tools.IsAjaxRequest(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            是否 Ajax 请求
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Tools.IsJsonRequest(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            是否 Json 请求 content-type=application/json
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Tools.IsHtmlRequest(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            是否为 html 网页请求
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Tools.Md5Encrypt(System.String)">
            <summary>
            MD5加密
            </summary>
            <param name="str">要加密的字符串</param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Tools.DESEncrypt(System.String,System.String)">
            <summary> 
            DES加密字符串 
            </summary> 
            <param name="encryptString">待加密的字符串</param> 
            <param name="encryptKey">加密密钥,要求为16位</param> 
            <returns>加密成功返回加密后的字符串，失败返回源串</returns> 
        </member>
        <member name="M:HZY.Infrastructure.Tools.DESDecrypt(System.String,System.String)">
            <summary> 
            DES解密字符串 
            </summary> 
            <param name="decryptString">待解密的字符串</param> 
            <param name="decryptKey">解密密钥,要求为16位,和加密密钥相同</param> 
            <returns>解密成功返回解密后的字符串，失败返源串</returns> 
        </member>
        <member name="M:HZY.Infrastructure.Tools.GetSjs(System.Int32)">
            <summary>
            随机数
            </summary>
            <param name="length">随机数长度</param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Tools.GetWeekByDate(System.DateTime)">
            <summary>
            根据日期获取星期几
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.Tools.GetWeekNumInMonth(System.DateTime)">
            <summary>
            得到这个月的第几周
            </summary>
            <param name="daytime">年月日</param>
            <returns>传递过来的时间是第几周</returns>
        </member>
        <member name="M:HZY.Infrastructure.Tools.Serialize``1(``0)">
            <summary>
            将对象序列化为Json字符串
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Tools.Deserialize``1(System.String)">
            <summary>
            将 Json 字符串转换为 指定的对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Tools.Deserialize(System.String)">
            <summary>
            将 Json 字符串转换为 object对象
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="F:HZY.Infrastructure.Tools.GetFileContentType">
            <summary>
            获取文件Content-Type
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.Tools.PackageManyZip(System.Collections.Generic.Dictionary{System.String,System.IO.Stream})">
            <summary>
            将多个流进行zip压缩，返回压缩后的流
            </summary>
            <param name="streams">key：文件名；value：文件名对应的要压缩的流</param>
            <returns>压缩后的流</returns>
        </member>
        <member name="M:HZY.Infrastructure.Tools.SetCookie(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            写入Cookie
            </summary>
            <param name="httpContext"></param>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="expires">过期时长</param>
        </member>
        <member name="M:HZY.Infrastructure.Tools.GetCookie(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            读Cookie值
            </summary>
            <param name="httpContext"></param>
            <param name="key">cookies名称</param>
            <returns>返回的cookies</returns>
        </member>
        <member name="M:HZY.Infrastructure.Tools.RemoveCookie(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            删除Cookie对象
            </summary>
            <param name="httpContext"></param>
            <param name="key">Cookie对象名称</param>
        </member>
        <member name="M:HZY.Infrastructure.Tools.FirstCharToLower(System.String)">
            <summary>
            首字母小写写
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Tools.FirstCharToUpper(System.String)">
            <summary>
            首字母大写
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Tools.GetBrowserClientInfo(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取浏览器客户端信息
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Tools.StringToBytes(System.String)">
            <summary>
            将16
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Tools.BytesToString(System.Byte[])">
            <summary>
            byte 数组 转化为 string
            </summary>
            <param name="reb"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Tools.DownLoadFile(Microsoft.AspNetCore.Http.HttpContext,System.Byte[],System.String,System.String)">
            <summary>
            通过 httpcontext 下载文件
            </summary>
            <param name="httpContext"></param>
            <param name="fileContents"></param>
            <param name="contentType"></param>
            <param name="fileDownloadName"></param>
            <returns></returns>
        </member>
        <member name="M:HZY.Infrastructure.Tools.GetNameByExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            获取名称 根据表达式树
            </summary>
            <param name="exp"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:HZY.Infrastructure.Zip">
            <summary>
            压缩 zip  https://www.cnblogs.com/xielong/p/6165550.html
            </summary>
        </member>
        <member name="M:HZY.Infrastructure.Zip.UnZip(System.String,System.String)">
            <summary>
            解压
            </summary>
            <param name="zipFile">压缩包文件名</param>
            <param name="targetPath">解压缩目标路径</param>
        </member>
    </members>
</doc>
